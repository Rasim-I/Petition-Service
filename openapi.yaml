openapi: 3.0.1
info:
  description: >-
    Simple service where you can view petitions, vote for them and even create
    your own.
  title: Swagger Petition Service
  version: v0
tags:
  - name: Petitions
    description: Support or create petitions
servers:
  - url: http://localhost:8080
    description: Generated server url
paths:
  /petitions/{petitionId}/vote:
    put:
      tags:
        - Petitions
      summary: 'Vote for petition'
      description: 'If you find petition useful, you can vote for it.'
      operationId: voteForPetition
      parameters:
        - name: petitionId
          description: Provide petition Id (UUID)
          in: path
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              type: string
        required: true
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
        '418':
          description: I'm a teapot
  /petitions:
    get:
      tags:
        - Petitions
      summary: View existing petitions
      description: You can either view all petitions, filter by author or view by parts
      operationId: getAllPetitions_1_1
      parameters:
        - name: page
          description: 'Page number (starting from 1)'
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: size
          description: 'Page size. If not specified, size by default is 2.'
          in: query
          required: false
          schema:
            type: integer
            format: int32
        - name: author
          description: 'Author (Example: Joe D.).'
          in: query
          required: false
          schema:
            type: string
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Petition'
    post:
      tags:
        - Petitions
      summary: 'Create your own petition'
      description: >-
        Here you can create your petition. In POST request, provide: 
        text for petition description (string),
        title (string)
        and your name (string).
      operationId: addPetition
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PetitionWebModel'
        required: true
      responses:
        '200':
          description: OK
        '500':
          description: Server Error
  /petitions/{petitionId}:
    get:
      tags:
        - Petitions
      summary: 'Get petition by Id'
      operationId: getPetition
      parameters:
        - name: petitionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Petition'
    delete:
      tags:
        - Petitions
      summary: 'Delete your petition'
      operationId: deletePetition
      parameters:
        - name: petitionId
          in: path
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: OK
        '404':
          description: Cannot delete non existing item
components:
  schemas:
    PetitionWebModel:
      type: object
      properties:
        text:
          type: string
        title:
          type: string
        author:
          type: string
    Petition:
      type: object
      properties:
        id:
          type: string
          format: uuid
        text:
          type: string
        title:
          type: string
        author:
          type: string
        voteCount:
          type: integer
          format: int32
        dateExpiring:
          type: string
          format: date-time
        votes:
          type: array
          items:
            $ref: '#/components/schemas/Vote'
        dateCreated:
          type: string
          format: date-time
    Vote:
      type: object
      properties:
        id:
          type: string
          format: uuid
        petitionId:
          type: string
          format: uuid
        user:
          type: string
        dateSubmitted:
          type: string
          format: date-time
